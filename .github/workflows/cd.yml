---
name: CD
'on':
  workflow_run:
    workflows:
      - CI
    types:
      - completed
    branches:
      - main
    tags:
      - '*'
jobs:
  build_push_images:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on:
      - self-hosted
      - Linux
      - DEV1-L
    timeout-minutes: 150
    env:
      DOCKER_BASE_IMAGE: "logpass/node"
    strategy:
      max-parallel: 2
      matrix:
        context:
          - build-type: RelWithDebInfo
            tag-suffix: ''
          - build-type: Debug
            tag-suffix: -debug
    steps:
      - name: clean after previous run
        working-directory: /tmp
        run: |
          sudo rm -rf "${{ github.workspace }}" \
          && mkdir -p "${{ github.workspace }}"
      - uses: actions/checkout@v3
      - name: set up qemu
        uses: docker/setup-qemu-action@v1.2.0
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1
      - name: login to dockerhub
        uses: docker/login-action@v1.14.1
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
          # NOTE: self-hosted GitHub Actions runners can be hosted on one
          # machine
          logout: false
      - name: populate dynamic environment variables
        run: |
          DOCKER_TAG="latest"

          if [[ "${GITHUB_REF}" == "refs/tags/"* ]];
          then
            DOCKER_TAG="${GITHUB_REF#refs/tags/}"
          fi

          DOCKER_TAG="${DOCKER_TAG}${{ matrix.context.tag-suffix }}"

          echo "DOCKER_TAG=${DOCKER_TAG}" >> ${GITHUB_ENV}
      - name: build and push production image
        uses: docker/build-push-action@v2
        env:
          DOCKER_CACHE_IMAGE: >-
            ${{ env.DOCKER_BASE_IMAGE }}:cache${{ matrix.context.tag-suffix }}
        with:
          context: .
          file: ./.devops/docker/Dockerfile
          target: production-stage
          build-args: |
            LOGPASS_ENV=production
            BUILD_TYPE=${{ matrix.context.build-type }}
          push: true
          cache-from: |
            type=registry,ref=${{ env.DOCKER_CACHE_IMAGE }}
            type=registry,ref=${{ env.DOCKER_BASE_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-to: |
            type=registry,ref=${{ env.DOCKER_CACHE_IMAGE }},mode=all
          tags: |
            ${{ env.DOCKER_BASE_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_BASE_IMAGE }}:${{ github.sha }}
      - name: sync docker image README.md
        uses: peter-evans/dockerhub-description@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
          repository: "${{ env.DOCKER_BASE_IMAGE }}"
          readme-filepath: ".devops/docker/README.md"
      - name: clean docker system
        if: always()
        run: |
          docker system prune \
            --all \
            --filter "until=2h" \
            --force \
          || true
